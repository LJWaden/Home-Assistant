blueprint:
  name: Tibber below input value turn on or off switch
  description: 'This automation BluePrint turns on or off a switch if price is above or below set cost value.'
  domain: automation
  input:
    energy_sensor:
      name: Tibber price sensor
      selector:
        entity:
          integration: tibber
          domain: sensor
      default: ''
    switch_entity: 
      name: Device to Turn OnOff
      selector:
          entity:
            domain: switch
    cost_below:
      name: Cost Below

max_exceeded: silent
variables:
  energy_sensor: !input 'energy_sensor'
  energy_sensor_state: '{{ float(states[energy_sensor].state)}}'
  energy_sensor_avg: '{{ float(states[energy_sensor].attributes[''avg_price''])}}'
  switch_entity: !input switch_entity
  cost_below: !input 'cost_below'
  cost_below_float: '{{ float(states[cost_below].state)}}'
trigger:
  platform: state
  entity_id: !input 'energy_sensor'
mode: single
action:
  - choose:
    # IF PriceBelowInputValue
    - conditions: "{{ cost_below_float > energy_sensor_state }}"
      sequence:
        - service: switch.turn_on
          target:
            entity_id: switch_entity
    # ELSE Turn Off
    default:
      - service: switch.turn_off
        target:
        entity_id: switch_entity
