blueprint:
  name: Tibber below input value turn Off switch
  description: 'This automation BluePrint turns off a switch if price is above set cost value.'
  domain: automation
  input:
    energy_sensor:
      name: Tibber price sensor
      selector:
        entity:
          integration: tibber
          domain: sensor
      default: ''
    cost_below:
      name: Cost Below
    switch_entity:
      name: Switch to Turn Off
      selector:
          entity:
            domain: switch
mode: single
max_exceeded: silent
variables:
  energy_sensor: !input 'energy_sensor'
  energy_sensor_state: '{{ float(states[energy_sensor].state)}}'
  cost_below: !input 'cost_below'
  cost_below_float: "{{ cost_below | float }}"
trigger:
  platform: state
  entity_id: !input 'energy_sensor'
condition:
  condition: template
  value_template: '{{energy_sensor_state > cost_below_float}}'
action:
  - service: switch.turn_off
    target: 
      entity_id: !input switch_entity
