blueprint:
  name: Tibber , max price Turn on SmartThingDevice
  description: 'This automation blueprint turns off smarthing climate device when energy price is higher than avg price per day and temperature sensor with set value.'
  domain: automation
  input:
    energy_sensor:
      name: Tibber price sensor
      selector:
        entity:
          integration: tibber
          domain: sensor
      default: ''
    climate_entity:
      name: Device to Turn On
      selector:
          entity:
            domain: climate
    temperature_sensor:
      name: Device to Monitor temperature
      selector:
          entity:
            domain: sensor
    temperature_entity:
      name: Temperature maximum
    temperature_entitySecond:
      name: Temperature maximum Second 

mode: single
max_exceeded: silent
variables:
  energy_sensor: !input 'energy_sensor'
  energy_sensor_state: '{{ float(states[energy_sensor].state)}}'
  energy_sensor_avg: '{{ float(states[energy_sensor].attributes[''avg_price''])}}'
  temperature_sensor: !input 'temperature_sensor'
  temperature_sensor_state: '{{ float(states[temperature_sensor].state)}}'
  max_temperature_entity: !input 'temperature_entity'
  max_temperature: "{{ max_temperature_entity | float }}"
  temperature_entitySecond: !input 'temperature_entitySecond'
  max_temperatureOverride: "{{ temperature_entitySecond | float }}"
trigger:
  platform: state
  entity_id: !input 'energy_sensor'
condition:
  condition: or
  conditions:
    - condition: template
      value_template: '{{max_temperatureOverride > temperature_sensor_state}}'
    - condition: and
      conditions:
        - condition: template
          value_template: '{{energy_sensor_state < 1.0 * energy_sensor_avg+0.3}}'
        - condition: template
          value_template: '{{max_temperature > temperature_sensor_state}}'
  
action:
  - service: climate.turn_on
    target: 
      entity_id: !input climate_entity
